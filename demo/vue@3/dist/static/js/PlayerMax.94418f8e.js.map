{"version":3,"file":"static/js/PlayerMax.94418f8e.js","mappings":"8MACWA,MAAM,U,GAERA,MAAM,gB,GACLA,MAAM,qB,aAOLA,MAAM,mB,GAKXC,EAAAA,EAAAA,IAA0C,UAAlCD,MAAM,oBAAkB,S,wKAfNE,EAAAC,Q,WAA9BC,EAAAA,EAAAA,IAiBU,UAjBVC,EAiBU,EAhBRJ,EAAAA,EAAAA,IAAqD,OAAhDD,MAAM,eAAgBM,OAAKC,EAAAA,EAAAA,IAAEL,EAAAM,c,SAClCP,EAAAA,EAAAA,IAcM,MAdNQ,EAcM,EAbJR,EAAAA,EAAAA,IAA+C,KAA/CS,GAA+CC,EAAAA,EAAAA,IAAfT,EAAAU,UAAQ,IACxCX,EAAAA,EAAAA,IAGC,OAFEY,IAAKX,EAAAY,UACLd,OAAKe,EAAAA,EAAAA,IAAEb,EAAAc,UAAS,uE,YAEnBC,EAAAA,EAAAA,IAAsCC,EAAA,CAAxBlB,MAAM,oBACpBiB,EAAAA,EAAAA,IAA0CE,EAAA,CAA1BnB,MAAM,sBACtBC,EAAAA,EAAAA,IAIM,MAJNmB,EAIM,EAHJH,EAAAA,EAAAA,IAAsCI,EAAA,CAA1BrB,MAAM,sBAClBiB,EAAAA,EAAAA,IAAwCK,EAAA,CAA5BtB,MAAM,wBAClBiB,EAAAA,EAAAA,IAAoCM,EAAA,CAAxBvB,MAAM,qBAEpBwB,Q,yDCfJpB,EAAAA,EAAAA,IASM,OATDJ,MAAM,eAAgByB,aAAUC,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,YAAU,GAAQC,WAAQH,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,YAAU,I,gBAC3ExB,EAAAA,EAAAA,IAMoB0B,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALK7B,EAAA8B,WAAU,CAAzBC,EAAKC,M,WADf9B,EAAAA,EAAAA,IAMoB,KANpB+B,EAAAA,EAAAA,IAEUjC,EAIUkC,YAJE,eAAeH,EAAKI,aAAW,CAClDC,IAAKL,EAAKI,YACVE,IAAKC,GAAOtC,EAAAuC,cAAcR,EAAKI,aAAeG,EAC9CxC,MAAOkC,IAAQhC,EAAAwC,eAAc,wE,QAC5BT,EAAKU,MAAI,M,8DAUjB,GAAeC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,eAENC,IAAAA,GACE,MAAO,CACLV,YAAW,KACXM,eAAgB,EAChBd,YAAY,EACZa,cAAe,GAEnB,EAEAM,SAAU,KACLC,EAAAA,EAAAA,IAAS,SAAU,CAAC,gBACpBC,EAAAA,EAAAA,IAAW,SAAU,CAAC,eACzBC,gBAAAA,GACE,OAAOC,KAAKnB,WAAWoB,IAAIC,GAAKA,EAAEhB,YACpC,GAEFiB,MAAO,CACLtB,WAAY,CACVuB,QAAS,SAASC,GACa,IAAzBA,EAAcC,SAGlBN,KAAKV,cAAgBe,EAAcJ,IAAI,IAAM,MAC/C,EACAM,WAAW,EACXC,MAAM,IAGVC,OAAAA,IACEC,EAAAA,EAAAA,IAAS,KACPV,KAAKW,QAAQC,iBAAiB,aAAcZ,KAAKa,eAErD,EAEAC,SAAAA,GACEd,KAAKW,QAAQI,oBAAoB,aAAcf,KAAKa,aACtD,EAEAG,QAAS,CACPH,YAAAA,CAAaI,GACX,GAAIjB,KAAKvB,WACP,OAEF,IAAIyC,EAAiBC,KAAKC,MAAiC,IAA3BH,EAAMI,OAAOC,aACzCC,EAAiBvB,KAAKD,iBAAiByB,UACzCC,GAAQA,EAAwB,MAAjBP,GAEb3B,EAAiBgC,EAAiB,EAAIA,EAAiB,EAAI,EAC3DG,EACF1B,KAAK2B,OAAS3B,KAAK2B,MAAM3B,KAAKD,iBAAiBR,IAC7CmC,GACF1B,KAAK2B,MAAM3B,KAAKD,iBAAiBR,IAAiB,GAAGqC,iBAEvD5B,KAAKT,eAAiBA,CACxB,K,UCpEJ,MAAMsC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,S,oCCPShF,MAAM,kC,GAINA,MAAM,kC,0CALbI,EAAAA,EAAAA,IAMM,OANDJ,MAAM,kBAAmByB,aAAUC,EAAA,KAAAA,EAAA,OAAAuD,IAAE/E,EAAAgF,YAAAhF,EAAAgF,cAAAD,K,EACxChF,EAAAA,EAAAA,IAA8E,MAA9EI,GAA8EM,EAAAA,EAAAA,IAAhCT,EAAAiF,YAAYjF,EAAAuE,cAAW,IACrExE,EAAAA,EAAAA,IAEM,OAFDD,MAAM,gCAAgCuC,IAAI,cAAejC,OAAKC,EAAAA,EAAAA,IAAEL,EAAAkF,mB,EACnEnF,EAAAA,EAAAA,IAA8F,OAAzFD,MAAM,wCAAyCM,OAAKC,EAAAA,EAAAA,IAAA,QAAUL,EAAAmF,sB,aAErEpF,EAAAA,EAAAA,IAAmF,MAAnFQ,GAAmFE,EAAAA,EAAAA,IAArCT,EAAAiF,YAAYjF,EAAA4D,QAAQwB,WAAQ,I,eAS9E,OAAe1C,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,iBAENC,IAAAA,GACE,MAAO,CACLqC,YAAW,KACXV,YAAa,EACbc,aAAc,EACd3D,YAAY,EACZ4D,YAAa,EACbC,gBAAiB,KAErB,EAEA1C,SAAU,KACLC,EAAAA,EAAAA,IAAS,SAAU,CAAC,OAAQ,YAC/BqC,eAAAA,GACE,OAAOf,KAAKC,MAAO,IAAMpB,KAAKsB,YAAetB,KAAKW,QAAQwB,SAC5D,EACAF,gBAAAA,GACE,MAAO,sDACLjC,KAAKkC,iCAELlC,KAAKkC,uDAELlC,KAAKoC,8BACWpC,KAAKoC,gBACzB,GAGF3B,OAAAA,IACEC,EAAAA,EAAAA,IAAS,KACPV,KAAKW,QAAQC,iBAAiB,WAAYZ,KAAKuC,YAC/CvC,KAAKW,QAAQC,iBAAiB,aAAcZ,KAAKa,eAErD,EAEAC,SAAAA,GACEd,KAAKW,QAAQI,oBAAoB,WAAYf,KAAKuC,YAClDvC,KAAKW,QAAQI,oBAAoB,aAAcf,KAAKa,aACtD,EAEAG,QAAS,CACPuB,UAAAA,GAEE,GAAIvC,KAAKW,QAAQ6B,WAAa,EAC5B,OAEF,IAAIC,EAAiBzC,KAAKW,QAAQ+B,SAASpC,OAC3CN,KAAKoC,aAAejB,KAAKC,MACtB,IAAMpB,KAAKW,QAAQ+B,SAASC,IAAIF,EAAiB,GAChDzC,KAAKW,QAAQwB,SAEnB,EACAtB,YAAAA,CAAaI,GACPjB,KAAKvB,aAGTuB,KAAKsB,YAAcL,EAAMI,OAAOC,YAClC,EACAS,UAAAA,CAAWd,GACTjB,KAAKvB,YAAa,EACbuB,KAAKsC,kBACRtC,KAAKsC,gBAAkBtC,KAAK2B,MAAMiB,YAAYC,yBAEhD,IAAIC,EAAU7B,EAAM8B,QAAQ,GAAGD,QAC/B9C,KAAKsB,YAActB,KAAKgD,YAAYF,EAAS9C,KAAKsC,gBAAgBW,KAAM,GACxEjD,KAAKqC,YAAcS,EACnBI,OAAOtC,iBAAiB,YAAaZ,KAAKmD,kBAC1CD,OAAOtC,iBAAiB,WAAYZ,KAAKoD,WAC3C,EACAD,gBAAAA,CAAiBlC,GACf,IAAI6B,EAAU7B,EAAM8B,QAAQ,GAAGD,QAC/B9C,KAAKsB,YAActB,KAAKgD,YAAYF,EAAS9C,KAAKqC,YAAa,GAC/DrC,KAAKqC,YAAcS,CACrB,EACAM,UAAAA,GACEpD,KAAKvB,YAAa,EAClBuB,KAAKW,QAAQW,YAActB,KAAKsB,YAChC4B,OAAOnC,oBAAoB,YAAaf,KAAKmD,kBAC7CD,OAAOnC,oBAAoB,WAAYf,KAAKoD,WAC9C,EACAJ,WAAAA,CAAYL,EAAKU,EAAOC,GACtB,IAEIhC,EAFAiC,EAAUZ,EAAMU,EAChBG,EAAUD,EAAUvD,KAAKsC,gBAAgBmB,MAE7C,OAAQH,GACN,KAAK,EACHhC,EAActB,KAAKW,QAAQwB,SAAWqB,EACtC,MACF,KAAK,EACHlC,EAActB,KAAKsB,YAActB,KAAKW,QAAQwB,SAAWqB,EACzD,MAOJ,OALIlC,EAAc,EAChBA,EAAc,EACLA,EAActB,KAAKW,QAAQwB,WACpCb,EAActB,KAAKW,QAAQwB,UAEtBb,CACT,KC5GJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,kDJwBA,GAAe7B,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,YAENgE,WAAY,CACVC,aAAY,EACZC,eAAc,EACdC,WAAU,IACVC,WAAU,IACVC,WAAUA,EAAAA,GAGZnE,SAAU,KACLC,EAAAA,EAAAA,IAAS,SAAU,CAAC,oBACpBA,EAAAA,EAAAA,IAAS,SAAU,CAAC,UAAW,YAAa,OAAQ,cACpDC,EAAAA,EAAAA,IAAW,SAAU,CAAC,WAAY,aAAc,cACnDzC,WAAAA,GACE,MAAO,wBACL2C,KAAKrC,4EAET,GAGFwC,MAAO,CACL,aAAc,SAAS6D,GACrBhE,KAAKiE,QAAQC,QAAQ,CAAEC,MAAO,CAAEC,UAAWJ,IAC7C,GAGFK,gBAAAA,CAAiBC,EAAIC,EAAMC,GAEzB,IAAIJ,EAAYE,EAAGH,MAAMC,UACzB,GAAKA,EAGL,OAAIE,EAAGG,KAAKC,cACHF,KAGFG,EAAAA,EAAAA,GAAe,CAAEC,OAAQ,CAAEC,KAAMT,KAAeU,KAAKC,IAC1D,IAAIC,EAAYD,EAAIpF,KAAKA,KACzBqF,EAAUC,SAAWD,EAAUE,WAC/BC,EAAAA,EAAMC,OAAO,kBAAmB,CAC9BpI,MAAOgI,EACPK,UAAW,CAACL,KAEdG,EAAAA,EAAMC,OAAO,kBAAmB,CAAEpI,MAAOgI,EAAWK,UAAW,CAACL,KAChER,KAEJ,EAEA/D,OAAAA,GACET,KAAKsF,gBAAgB,CACnBC,MAAO,yBACP5F,MAAM,GAEV,EAEAmB,SAAAA,GACEd,KAAKsF,gBAAgB,CACnBC,MAAO,yBACP5F,MAAM,IAERK,KAAKsF,gBAAgB,CACnBC,MAAO,0BACP5F,MAAM,GAEV,EAEAqB,QAAS,KACJwE,EAAAA,EAAAA,IAAa,CAAC,uBK/FrB,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://kugou/./src/views/player/PlayerMax.vue","webpack://kugou/./src/views/player/PlayerLyrics.vue","webpack://kugou/./src/views/player/PlayerLyrics.vue?da16","webpack://kugou/./src/views/player/PlayerProgress.vue","webpack://kugou/./src/views/player/PlayerProgress.vue?2481","webpack://kugou/./src/views/player/PlayerMax.vue?480b"],"sourcesContent":["<template>\r\n  <section class=\"player\" v-if=\"music\">\r\n    <div class=\"player__mask\" :style=\"playerBgImg\"></div>\r\n    <div class=\"player__cont\">\r\n      <h6 class=\"player__song_name\">{{songName}}</h6>\r\n      <img\r\n        :src=\"singerImg\"\r\n        :class=\"isPlaying?'player__singer_img player__singer_img--active':'player__singer_img'\"\r\n      >\r\n      <PlayerLyrics class=\"player__lyrics\"/>\r\n      <PlayerProgress class=\"player__progress\"/>\r\n      <div class=\"player__buttons\">\r\n        <PrevButton class=\"player__btn_prev\"/>\r\n        <PlayButton class=\"player__btn_status\"/>\r\n        <NextButton class=\"play__btn_next\"/>\r\n      </div>\r\n      <button class=\"player__download\"></button>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\n\r\nimport PlayerLyrics from './PlayerLyrics'\r\nimport PlayerProgress from './PlayerProgress'\r\nimport PlayButton from './PlayButton'\r\nimport NextButton from './NextButton'\r\nimport PrevButton from './PrevButton'\r\n\r\nimport { mapState, mapGetters, mapMutations } from 'vuex'\r\nimport { fetchSongLyric } from '@/requests/player'\r\nimport store from '../../store/index'\r\nexport default defineComponent({\r\n  name: 'PlayerMax',\r\n\r\n  components: {\r\n    PlayerLyrics,\r\n    PlayerProgress,\r\n    PlayButton,\r\n    NextButton,\r\n    PrevButton\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('images', ['logo__theme']),\r\n    ...mapState('player', ['audioEl', 'isPlaying', 'song', 'music']),\r\n    ...mapGetters('player', ['songName', 'singerName', 'singerImg']),\r\n    playerBgImg() {\r\n      return `background-image:url(${\r\n        this.singerImg\r\n      }),linear-gradient(to right, rgb(48, 67, 82), rgb(215, 210, 204));`\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    'music.hash': function(newHash) {\r\n      this.$router.replace({ query: { musicHash: newHash } })\r\n    }\r\n  },\r\n\r\n  beforeRouteEnter(to, from, next) {\r\n    //play music if musicHash exists which means this page was loaded directly\r\n    let musicHash = to.query.musicHash\r\n    if (!musicHash) {\r\n      return\r\n    }\r\n    if (to.meta.fromPlayerMed) {\r\n      return next()\r\n    }\r\n    //? just commit player/wantPlay is enough?\r\n    return fetchSongLyric({ params: { hash: musicHash } }).then(res => {\r\n      let musicData = res.data.data\r\n      musicData.filename = musicData.audio_name\r\n      store.commit('player/wantPlay', {\r\n        music: musicData,\r\n        musicList: [musicData]\r\n      })\r\n      store.commit('player/wantPlay', { music: musicData, musicList: [musicData] })\r\n      next()\r\n    })\r\n  },\r\n\r\n  mounted() {\r\n    this.replaceProperty({\r\n      paths: 'player.isPlayerMedShow',\r\n      data: false\r\n    })\r\n  },\r\n\r\n  unmounted() {\r\n    this.replaceProperty({\r\n      paths: 'player.isPlayerMedShow',\r\n      data: true\r\n    })\r\n    this.replaceProperty({\r\n      paths: 'player.isPlayerMedSmall',\r\n      data: false\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    ...mapMutations(['replaceProperty'])\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n@import (reference) '~@/styles/constant';\r\n.player {\r\n  position: relative;\r\n}\r\n.player__mask {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  filter: blur(15px);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: block;\r\n  background-repeat: no-repeat, no-repeat;\r\n  background-size: auto 100%, auto 100%;\r\n  background-position: center, center;\r\n  z-index: -1;\r\n}\r\n.player__cont {\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n// layout with 1rem which is actual vh set by js.\r\n// Using vh would be wrong.\r\n.player__song_name {\r\n  height: .calc_on_app_cont(54) [ @result];\r\n  line-height: .calc_on_app_cont(54) [ @result];\r\n  width: calc(100% - .calc_on_app_cont(120) [ @result]);\r\n  box-sizing: border-box;\r\n  margin: 0 .calc_on_app_cont(120) [ @result];\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n  color: @white;\r\n  text-align: center;\r\n  font-size: inherit;\r\n}\r\n.player__singer_img {\r\n  margin-top: .calc_on_app_cont(26) [ @result];\r\n  height: .calc_on_app_cont(193) [ @result];\r\n  width: .calc_on_app_cont(193) [ @result];\r\n  flex: 0 0 auto;\r\n  border-radius: 50%;\r\n  animation: rotate 20s linear infinite reverse;\r\n  animation-play-state: paused;\r\n}\r\n.player__singer_img--active {\r\n  animation-play-state: running;\r\n}\r\n.player__lyrics {\r\n  margin-top: .calc_on_app_cont(16) [ @result];\r\n  height: .calc_on_app_cont(68) [ @result];\r\n  line-height: .calc_on_app_cont(34) [ @result];\r\n  width: 102%;\r\n  box-sizing: border-box;\r\n  padding: 0 60px;\r\n}\r\n.player__progress {\r\n  height: .calc_on_app_cont(48) [ @result];\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n.player__buttons {\r\n  height: .calc_on_app_cont(58) [ @result];\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.player__btn_prev,\r\n.play__btn_next,\r\n.player__btn_status {\r\n  border-radius: 50%;\r\n  border: .calc_on_app_cont(2) [ @result] solid @white;\r\n  margin: 0 .calc_on_app_cont(16) [ @result];\r\n}\r\n.player__btn_prev,\r\n.play__btn_next {\r\n  width: .calc_on_app_cont(42) [ @result];\r\n  height: .calc_on_app_cont(42) [ @result];\r\n  font-size: .calc_on_app_cont(16) [ @result];\r\n}\r\n.player__btn_prev :deep(.icon) {\r\n  transform: translate(0, 0px);\r\n}\r\n.play__btn_next :deep(.icon) {\r\n  transform: translate(1px, 0px);\r\n}\r\n.player__btn_status {\r\n  width: .calc_on_app_cont(58) [ @result];\r\n  height: .calc_on_app_cont(58) [ @result];\r\n  font-size: .calc_on_app_cont(20) [ @result];\r\n}\r\n.player__download {\r\n  margin-top: .calc_on_app_cont(19) [ @result] auto 0;\r\n  height: .calc_on_app_cont(45) [ @result];\r\n  width: .calc_on_app_cont(211) [ @result];\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"player_lyric\" @touchstart=\"isTouching=true\" @touchend=\"isTouching=false\">\r\n    <p\r\n      v-for=\"(item,index) in lyricItems\"\r\n      v-bind=\"getVBindObj('millisecond-'+item.millisecond)\"\r\n      :key=\"item.millisecond\"\r\n      :ref=\"el => (lyricElements[item.millisecond] = el)\"\r\n      :class=\"index===prevLyricIndex+1?'player_lyric_text player_lyric_text--active ':'player_lyric_text'\"\r\n    >{{ item.text }}</p>\r\n    <!-- //todo make it width: 100% -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, nextTick } from 'vue';\r\n\r\nimport { mapState, mapGetters } from 'vuex'\r\nimport { getVBindObj } from '@/utils'\r\nexport default defineComponent({\r\n  name: 'PlayerLyrics',\r\n\r\n  data() {\r\n    return {\r\n      getVBindObj,\r\n      prevLyricIndex: 0,\r\n      isTouching: false,\r\n      lyricElements: []\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('player', ['audioEl']),\r\n    ...mapGetters('player', ['lyricItems']),\r\n    lyricMillisecond() {\r\n      return this.lyricItems.map(o => o.millisecond)\r\n    }\r\n  },\r\n  watch: {\r\n    lyricItems: {\r\n      handler: function(newLyricItems) {\r\n        if (newLyricItems.length === 0) {\r\n          return\r\n        }\r\n        this.lyricElements = newLyricItems.map(() => null)\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    }\r\n  },\r\n  mounted() {\r\n    nextTick(() => {\r\n      this.audioEl.addEventListener('timeupdate', this.timeUpdateCb)\r\n    })\r\n  },\r\n\r\n  unmounted() {\r\n    this.audioEl.removeEventListener('timeupdate', this.timeUpdateCb)\r\n  },\r\n\r\n  methods: {\r\n    timeUpdateCb(event) {\r\n      if (this.isTouching) {\r\n        return\r\n      }\r\n      let curMillisecond = Math.floor(event.target.currentTime * 1000)\r\n      let nextLyricIndex = this.lyricMillisecond.findIndex(\r\n        time => time > curMillisecond * 1.005\r\n      )\r\n      let prevLyricIndex = nextLyricIndex > 1 ? nextLyricIndex - 2 : 0\r\n      let isRefAvailable =\r\n        this.$refs && this.$refs[this.lyricMillisecond[prevLyricIndex]]\r\n      if (isRefAvailable) {\r\n        this.$refs[this.lyricMillisecond[prevLyricIndex]][0].scrollIntoView()\r\n      }\r\n      this.prevLyricIndex = prevLyricIndex\r\n    }\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n@import (reference) '~@/styles/constant';\r\n.player_lyric {\r\n  color: @white-3;\r\n  overflow: scroll;\r\n  font-size: @font_size_med;\r\n}\r\n.player_lyric {\r\n  text-align: center;\r\n}\r\n.player_lyric_text {\r\n  line-height: inherit;\r\n}\r\n.player_lyric_text--active {\r\n  color: @lemon;\r\n}\r\n</style>\r\n","import { render } from \"./PlayerLyrics.vue?vue&type=template&id=184f50a4&scoped=true\"\nimport script from \"./PlayerLyrics.vue?vue&type=script&lang=js\"\nexport * from \"./PlayerLyrics.vue?vue&type=script&lang=js\"\n\nimport \"./PlayerLyrics.vue?vue&type=style&index=0&id=184f50a4&scoped=true&lang=less\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-184f50a4\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"player_progress\" @touchstart=\"setCurTime\">\r\n    <div class=\"player_progress__song_cur_time\">{{secondToMin(currentTime)}}</div>\r\n    <div class=\"player_progress__progress_bar\" ref=\"progressBar\" :style=\"progressBarStyle\">\r\n      <div class=\"player_progress__progress_bar_pointer\" :style=\"`left:${currentProgress}%;`\"></div>\r\n    </div>\r\n    <div class=\"player_progress__song_duration\">{{secondToMin(audioEl.duration)}}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, nextTick } from 'vue';\r\n\r\nimport { mapState } from 'vuex'\r\nimport { secondToMin } from '@/utils'\r\nexport default defineComponent({\r\n  name: 'PlayerProgress',\r\n\r\n  data() {\r\n    return {\r\n      secondToMin,\r\n      currentTime: 0,\r\n      loadProgress: 0,\r\n      isTouching: false,\r\n      touchStartX: 0,\r\n      progressBarRect: null\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('player', ['song', 'audioEl']),\r\n    currentProgress() {\r\n      return Math.floor((100 * this.currentTime) / this.audioEl.duration)\r\n    },\r\n    progressBarStyle() {\r\n      return `background-image:linear-gradient(to right, #2ca2f9 ${\r\n        this.currentProgress\r\n      }%, transparent ${\r\n        this.currentProgress\r\n      }%),linear-gradient(to right, #6c6b70 ${\r\n        this.loadProgress\r\n      }%, transparent ${this.loadProgress}%)`\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    nextTick(() => {\r\n      this.audioEl.addEventListener('progress', this.progressCb)\r\n      this.audioEl.addEventListener('timeupdate', this.timeUpdateCb)\r\n    })\r\n  },\r\n\r\n  unmounted() {\r\n    this.audioEl.removeEventListener('progress', this.progressCb)\r\n    this.audioEl.removeEventListener('timeupdate', this.timeUpdateCb)\r\n  },\r\n\r\n  methods: {\r\n    progressCb() {\r\n      // todo songs wouldn't download all now or user jumped. They all make the progress bar wouldn't continuous. So, the style may need change.\r\n      if (this.audioEl.readyState < 2) {\r\n        return\r\n      }\r\n      let bufferedLength = this.audioEl.buffered.length\r\n      this.loadProgress = Math.floor(\r\n        (100 * this.audioEl.buffered.end(bufferedLength - 1)) /\r\n          this.audioEl.duration\r\n      )\r\n    },\r\n    timeUpdateCb(event) {\r\n      if (this.isTouching) {\r\n        return\r\n      }\r\n      this.currentTime = event.target.currentTime\r\n    },\r\n    setCurTime(event) {\r\n      this.isTouching = true\r\n      if (!this.progressBarRect) {\r\n        this.progressBarRect = this.$refs.progressBar.getBoundingClientRect()\r\n      }\r\n      let clientX = event.touches[0].clientX\r\n      this.currentTime = this.calcCurTime(clientX, this.progressBarRect.left, 0)\r\n      this.touchStartX = clientX\r\n      window.addEventListener('touchmove', this.setCurTimeOnMove)\r\n      window.addEventListener('touchend', this.touchEndCb)\r\n    },\r\n    setCurTimeOnMove(event) {\r\n      let clientX = event.touches[0].clientX\r\n      this.currentTime = this.calcCurTime(clientX, this.touchStartX, 1)\r\n      this.touchStartX = clientX\r\n    },\r\n    touchEndCb() {\r\n      this.isTouching = false\r\n      this.audioEl.currentTime = this.currentTime\r\n      window.removeEventListener('touchmove', this.setCurTimeOnMove)\r\n      window.removeEventListener('touchend', this.touchEndCb)\r\n    },\r\n    calcCurTime(end, start, type) {\r\n      let offsetX = end - start\r\n      let percent = offsetX / this.progressBarRect.width\r\n      let currentTime\r\n      switch (type) {\r\n        case 0:\r\n          currentTime = this.audioEl.duration * percent\r\n          break\r\n        case 1:\r\n          currentTime = this.currentTime + this.audioEl.duration * percent\r\n          break\r\n      }\r\n      if (currentTime < 0) {\r\n        currentTime = 0\r\n      } else if (currentTime > this.audioEl.duration) {\r\n        currentTime = this.audioEl.duration\r\n      }\r\n      return currentTime\r\n    }\r\n  },\r\n});\r\n</script>\r\n<style lang=\"less\" scoped>\r\n@import (reference) '~@/styles/constant';\r\n.player_progress {\r\n  font-size: @font_size_mini;\r\n  padding: 16px @padding_width;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: @white-2;\r\n}\r\n.player_progress__song_cur_time,\r\n.player_progress__song_duration {\r\n  flex: 0 0 auto;\r\n}\r\n.player_progress__progress_bar {\r\n  flex: 1 0 auto;\r\n  height: 4px;\r\n  margin: 0 10px;\r\n  background-color: @black-2;\r\n  position: relative;\r\n}\r\n.player_progress__progress_bar_pointer {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: @theme;\r\n  height: 13px;\r\n  width: 13px;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n","import { render } from \"./PlayerProgress.vue?vue&type=template&id=b7d87cd8&scoped=true\"\nimport script from \"./PlayerProgress.vue?vue&type=script&lang=js\"\nexport * from \"./PlayerProgress.vue?vue&type=script&lang=js\"\n\nimport \"./PlayerProgress.vue?vue&type=style&index=0&id=b7d87cd8&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b7d87cd8\"]])\n\nexport default __exports__","import { render } from \"./PlayerMax.vue?vue&type=template&id=a53cc1da&scoped=true\"\nimport script from \"./PlayerMax.vue?vue&type=script&lang=js\"\nexport * from \"./PlayerMax.vue?vue&type=script&lang=js\"\n\nimport \"./PlayerMax.vue?vue&type=style&index=0&id=a53cc1da&scoped=true&lang=less\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a53cc1da\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_ctx","music","_createElementBlock","_hoisted_1","style","_normalizeStyle","playerBgImg","_hoisted_2","_hoisted_3","_toDisplayString","songName","src","singerImg","_normalizeClass","isPlaying","_createVNode","_component_PlayerLyrics","_component_PlayerProgress","_hoisted_5","_component_PrevButton","_component_PlayButton","_component_NextButton","_hoisted_6","onTouchstart","_cache","$event","isTouching","onTouchend","_Fragment","_renderList","lyricItems","item","index","_mergeProps","getVBindObj","millisecond","key","ref","el","lyricElements","prevLyricIndex","text","defineComponent","name","data","computed","mapState","mapGetters","lyricMillisecond","this","map","o","watch","handler","newLyricItems","length","immediate","deep","mounted","nextTick","audioEl","addEventListener","timeUpdateCb","unmounted","removeEventListener","methods","event","curMillisecond","Math","floor","target","currentTime","nextLyricIndex","findIndex","time","isRefAvailable","$refs","scrollIntoView","__exports__","args","setCurTime","secondToMin","progressBarStyle","currentProgress","duration","loadProgress","touchStartX","progressBarRect","progressCb","readyState","bufferedLength","buffered","end","progressBar","getBoundingClientRect","clientX","touches","calcCurTime","left","window","setCurTimeOnMove","touchEndCb","start","type","offsetX","percent","width","components","PlayerLyrics","PlayerProgress","PlayButton","NextButton","PrevButton","newHash","$router","replace","query","musicHash","beforeRouteEnter","to","from","next","meta","fromPlayerMed","fetchSongLyric","params","hash","then","res","musicData","filename","audio_name","store","commit","musicList","replaceProperty","paths","mapMutations","render"],"sourceRoot":""}