{"version":3,"sources":["./src/app/services/singer-category.service.ts","./src/app/views/singer/singer-routing.module.ts","./src/app/views/singer/singer.module.ts","./src/app/views/singer/singer-info/singer-info.component.ts","./src/app/views/singer/singer-info/singer-info.component.html","./src/app/views/singer/singer-list/singer-list.component.ts","./src/app/views/singer/singer-list/singer-list.component.html","./src/app/views/singer/singer-category/singer-category.component.html","./src/app/views/singer/singer-category/singer-category.component.ts","./src/app/services/singer-info.service.ts","./src/app/services/singer-list.service.ts"],"names":[],"mappings":"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","file":"views-singer-singer-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BASE_ORIGIN } from '../constants/index';\r\n\r\nexport type SingerCategory = {\r\n  path: string;\r\n  classid: number;\r\n  classname: string;\r\n};\r\ntype SingerCategoryResponse = {\r\n  list: SingerCategory[];\r\n};\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SingerCategoryService {\r\n  singerCategoryUrl = `${BASE_ORIGIN}/singer/class&json=true`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async fetchSingerCategory() {\r\n    const { list } = await this.http\r\n      .get<SingerCategoryResponse>(this.singerCategoryUrl)\r\n      .toPromise();\r\n\r\n    const singerCategories = list.reduce(\r\n      (\r\n        re: {\r\n          data: SingerCategory[];\r\n          category: string;\r\n        }[],\r\n        obj\r\n      ) => {\r\n        obj.path = `/singer/list/${obj.classid}`;\r\n        const findCategories = re.find(\r\n          (o) => o.category === obj.classname.substring(0, 2)\r\n        );\r\n        if (findCategories) {\r\n          findCategories.data.push(obj);\r\n        } else {\r\n          re.push({\r\n            category: obj.classname.substring(0, 2),\r\n            data: [obj],\r\n          });\r\n        }\r\n        return re;\r\n      },\r\n      []\r\n    );\r\n    return singerCategories;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SingerCategoryComponent } from './singer-category/singer-category.component';\r\nimport { SingerListComponent } from './singer-list/singer-list.component';\r\nimport { SingerInfoComponent } from './singer-info/singer-info.component';\r\nimport { MyMainComponent } from '../../components/my-main/my-main.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'category',\r\n    component: MyMainComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: SingerCategoryComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'list/:singerListId',\r\n    component: SingerListComponent,\r\n  },\r\n  {\r\n    path: 'info/:singerId',\r\n    component: SingerInfoComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SingerRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SingerCategoryComponent } from './singer-category/singer-category.component';\r\nimport { SingerListComponent } from './singer-list/singer-list.component';\r\nimport { SingerInfoComponent } from './singer-info/singer-info.component';\r\nimport { SingerRoutingModule } from './singer-routing.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SingerCategoryComponent,\r\n    SingerListComponent,\r\n    SingerInfoComponent,\r\n  ],\r\n  imports: [CommonModule, SharedModule, SingerRoutingModule],\r\n})\r\nexport class SingerModule {}\r\n","import { ResponseTypeFromServiceReq } from 'src/app/typings/index';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SingerInfoService } from '../../../services/singer-info.service';\r\n\r\n@Component({\r\n  selector: 'app-singer-info',\r\n  templateUrl: './singer-info.component.html',\r\n  styleUrls: ['./singer-info.component.scss'],\r\n})\r\nexport class SingerInfoComponent implements OnInit {\r\n  singerInfo: ResponseTypeFromServiceReq<\r\n    typeof SingerInfoService,\r\n    'fetchSingerInfo'\r\n  > = { info: {}, data: [] };\r\n\r\n  constructor(private singerInfoService: SingerInfoService) {}\r\n\r\n  get getModuleHeadInfo() {\r\n    // @ts-ignore\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return this.singerInfo.info;\r\n  }\r\n\r\n  get getMusicList() {\r\n    // @ts-ignore\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return this.singerInfo.data;\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const singerId = window.location.pathname.split('/').pop();\r\n    if (singerId === undefined) {\r\n      return;\r\n    }\r\n    this.singerInfo = await this.singerInfoService.fetchSingerInfo(singerId);\r\n  }\r\n}\r\n","<section class=\"singer_info\" test-id=\"page-singer-info\">\r\n  <app-my-module-head [moduleHeadInfo]=\"getModuleHeadInfo\">\r\n    <app-my-module-description\r\n      slot=\"moduleDes\"\r\n      [description]=\"getModuleHeadInfo.intro\"\r\n    >\r\n    </app-my-module-description>\r\n  </app-my-module-head>\r\n  <app-my-music-list [musicList]=\"getMusicList\"> </app-my-music-list>\r\n</section>\r\n","import { lazyLoad } from 'src/app/utils';\r\nimport { ResponseTypeFromServiceReq } from 'src/app/typings/index';\r\nimport { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\r\nimport { SingerListService } from '../../../services/singer-list.service';\r\n\r\n@Component({\r\n  selector: 'app-singer-list',\r\n  templateUrl: './singer-list.component.html',\r\n  styleUrls: ['./singer-list.component.scss'],\r\n})\r\nexport class SingerListComponent implements OnInit {\r\n  // @ts-ignore\r\n  @ViewChild('lazyLoadRoot') lazyLoadRoot: ElementRef<HTMLImageElement>;\r\n\r\n  // @ts-ignore\r\n  @ViewChildren('lazyImages') lazyImages: ElementRef<HTMLImageElement>;\r\n\r\n  singerList: ResponseTypeFromServiceReq<\r\n    typeof SingerListService,\r\n    'fetchSingerList'\r\n  > = {\r\n    info: {\r\n      id: '',\r\n      name: '',\r\n      count: 0,\r\n    },\r\n    data: [],\r\n  };\r\n\r\n  constructor(private singerListService: SingerListService) {}\r\n\r\n  get singerListData() {\r\n    // @ts-ignore\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return this.singerList.data;\r\n  }\r\n\r\n  get singerName() {\r\n    // @ts-ignore\r\n    // eslint-disable-next-line\r\n    return this.singerList.info.name;\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const singerListId = window.location.pathname.split('/').pop();\r\n    if (singerListId === undefined) {\r\n      return;\r\n    }\r\n    this.singerList = await this.singerListService.fetchSingerList(\r\n      singerListId\r\n    );\r\n    requestAnimationFrame(() => {\r\n      // todo ? why ngOnChanges not work here?\r\n      this.onSingerListChange();\r\n    });\r\n  }\r\n  /* eslint-disable */\r\n\r\n  onSingerListChange() {\r\n    // @ts-ignore\r\n    if (this.singerList.data.length === 0 || this.lazyImages === undefined) {\r\n      return;\r\n    }\r\n    lazyLoad(\r\n      // @ts-ignore\r\n      this.lazyImages.toArray().map((ref) => ref.nativeElement),\r\n      {\r\n        root: this.lazyLoadRoot.nativeElement,\r\n      }\r\n    );\r\n    /* eslint-enable */\r\n  }\r\n}\r\n","<section class=\"singer_list\" test-id=\"page-singer-list\">\r\n  <app-my-module-title [title]=\"singerName\"></app-my-module-title>\r\n  <ul class=\"singer_list__list\" #lazyLoadRoot>\r\n    <li\r\n      class=\"singer_list__item main_border_bottom\"\r\n      *ngFor=\"let item of singerListData\"\r\n      test-class=\"list\"\r\n    >\r\n      <a [routerLink]=\"item.path\" class=\"singer_list__link\" test-class=\"link\">\r\n        <img\r\n          class=\"singer_list__img lazy_image\"\r\n          #lazyImages\r\n          src=\"assets/images/logo__grey.png\"\r\n          [attr.data-src]=\"item.imgUrl\"\r\n        />\r\n        <div class=\"singer_list__name\">{{ item.name }}</div>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</section>\r\n","<section class=\"singer_category\" test-id=\"page-singer-category\">\r\n  <ul\r\n    class=\"singer_category__list main_border\"\r\n    *ngFor=\"let list of singerCategories\"\r\n  >\r\n    <li\r\n      class=\"singer_category__item main_border_bottom\"\r\n      *ngFor=\"let item of list.data\"\r\n      test-class=\"list\"\r\n    >\r\n      <a\r\n        [routerLink]=\"item.path\"\r\n        class=\"singer_category__link\"\r\n        test-class=\"link\"\r\n      >\r\n        <div class=\"singer_category__title\">{{ item.classname }}</div>\r\n        <button class=\"singer_category_btn\">\r\n          <svg class=\"icon\" aria-hidden=\"true\">\r\n            <use xlink:href=\"#icon-arrow-right\"></use>\r\n          </svg>\r\n        </button>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</section>\r\n","import { ResponseTypeFromServiceReq } from 'src/app/typings/index';\r\nimport { SingerCategoryService } from 'src/app/services/singer-category.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-singer-category',\r\n  templateUrl: './singer-category.component.html',\r\n  styleUrls: ['./singer-category.component.scss'],\r\n})\r\nexport class SingerCategoryComponent implements OnInit {\r\n  singerCategories: ResponseTypeFromServiceReq<\r\n    typeof SingerCategoryService,\r\n    'fetchSingerCategory'\r\n  > = [];\r\n\r\n  constructor(private singerCategoryService: SingerCategoryService) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.singerCategories = await this.singerCategoryService.fetchSingerCategory();\r\n  }\r\n}\r\n","import { replaceSizeInUrl } from 'src/app/utils';\r\nimport { BASE_ORIGIN } from 'src/app/constants';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\ntype SingerInfoResponse = {\r\n  info: {\r\n    singerid: number;\r\n    singername: string;\r\n    songcount: number;\r\n    albumcount: number;\r\n    imgurl: string;\r\n    intro: string;\r\n  };\r\n  songs: {\r\n    list: { filename: string; name: string }[];\r\n  };\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SingerInfoService {\r\n  singerInfoUrl = `${BASE_ORIGIN}/singer/info`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async fetchSingerInfo(singerId: string) {\r\n    const response = await this.http\r\n      .get<SingerInfoResponse>(`${this.singerInfoUrl  }/${singerId}&json=true`)\r\n      .toPromise();\r\n    const { info, songs } = response;\r\n\r\n    const singerInfo = {\r\n      info: {\r\n        id: info.singerid,\r\n        name: info.singername,\r\n        count: info.songcount,\r\n        albumcount: info.albumcount,\r\n        imgUrl: replaceSizeInUrl(info.imgurl),\r\n        intro: info.intro,\r\n      },\r\n      data: songs.list,\r\n    };\r\n    songs.list.forEach((obj) => {\r\n      obj.name = obj.filename;\r\n    });\r\n    return singerInfo;\r\n  }\r\n}\r\n","import { replaceSizeInUrl } from 'src/app/utils';\r\nimport { BASE_ORIGIN } from 'src/app/constants';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\ntype SingerListResponse = {\r\n  classid: number;\r\n  classname: string;\r\n  singers: {\r\n    list: {\r\n      total: number;\r\n      info: {\r\n        singerid: number;\r\n        singername: string;\r\n        imgurl: string;\r\n        id: number;\r\n        name: string;\r\n        imgUrl: string;\r\n        path: string;\r\n      }[];\r\n    };\r\n    total: number;\r\n  };\r\n};\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SingerListService {\r\n  singerListUrl = `${BASE_ORIGIN}/singer/list/&json=true&singerListId=`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async fetchSingerList(singerListId: string) {\r\n    const response = await this.http\r\n      .get<SingerListResponse>(`${this.singerListUrl}${singerListId}`)\r\n      .toPromise();\r\n    const {\r\n      classid,\r\n      classname,\r\n\r\n      singers,\r\n    } = response;\r\n    singers.list.info.forEach((obj) => {\r\n      obj.id = obj.singerid;\r\n      obj.name = obj.singername;\r\n      obj.imgUrl = replaceSizeInUrl(obj.imgurl);\r\n      obj.path = `/singer/info/${obj.id}`;\r\n    });\r\n    return {\r\n      info: {\r\n        id: classid,\r\n        name: classname,\r\n        count: singers.list.total,\r\n      },\r\n      data: singers.list.info,\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}